{"ast":null,"code":"// API service for communicating with the backend\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass APIService {\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      // For development, return mock data instead of throwing\n      if (endpoint.includes('/trains') && !options.method) {\n        return getMockTrains();\n      }\n      throw error;\n    }\n  }\n  get(endpoint) {\n    return this.request(endpoint);\n  }\n  post(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  }\n  put(endpoint, data) {\n    return this.request(endpoint, {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n  delete(endpoint) {\n    return this.request(endpoint, {\n      method: 'DELETE'\n    });\n  }\n}\nconst apiService = new APIService();\n\n// Mock data functions for development\nfunction getMockTrains() {\n  return [{\n    trainId: 'K-101',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 45200,\n    bayPosition: 'A1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-15',\n    brandingExpiry: '2024-12-31'\n  }, {\n    trainId: 'K-102',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 38900,\n    bayPosition: 'A2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-10',\n    brandingExpiry: '2024-11-30'\n  }, {\n    trainId: 'K-103',\n    fitnessStatus: 'Expired',\n    jobCardStatus: 'Open',\n    brandingCategory: 'Basic',\n    mileage: 52100,\n    bayPosition: 'B1',\n    cleaningStatus: 'Pending',\n    lastMaintenance: '2024-07-20',\n    brandingExpiry: '2024-10-15'\n  }, {\n    trainId: 'K-104',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 41800,\n    bayPosition: 'B2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-25',\n    brandingExpiry: '2025-01-15'\n  }, {\n    trainId: 'K-105',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Open',\n    brandingCategory: 'Standard',\n    mileage: 36200,\n    bayPosition: 'C1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-05',\n    brandingExpiry: '2024-12-20'\n  }, {\n    trainId: 'K-106',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 47300,\n    bayPosition: 'C2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-18',\n    brandingExpiry: '2025-02-28'\n  }, {\n    trainId: 'K-107',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 39500,\n    bayPosition: 'D1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-12',\n    brandingExpiry: '2024-11-10'\n  }, {\n    trainId: 'K-108',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Basic',\n    mileage: 33100,\n    bayPosition: 'D2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-22',\n    brandingExpiry: '2024-12-05'\n  }, {\n    trainId: 'K-109',\n    fitnessStatus: 'Expired',\n    jobCardStatus: 'Open',\n    brandingCategory: 'Standard',\n    mileage: 48700,\n    bayPosition: 'E1',\n    cleaningStatus: 'Pending',\n    lastMaintenance: '2024-07-15',\n    brandingExpiry: '2024-10-01'\n  }, {\n    trainId: 'K-110',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 42600,\n    bayPosition: 'E2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-28',\n    brandingExpiry: '2025-01-20'\n  }, {\n    trainId: 'K-111',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 37400,\n    bayPosition: 'F1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-08',\n    brandingExpiry: '2024-12-15'\n  }, {\n    trainId: 'K-112',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Open',\n    brandingCategory: 'Basic',\n    mileage: 44900,\n    bayPosition: 'F2',\n    cleaningStatus: 'Pending',\n    lastMaintenance: '2024-08-02',\n    brandingExpiry: '2024-11-25'\n  }, {\n    trainId: 'K-113',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 40100,\n    bayPosition: 'G1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-20',\n    brandingExpiry: '2025-03-10'\n  }, {\n    trainId: 'K-114',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 35800,\n    bayPosition: 'G2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-17',\n    brandingExpiry: '2024-12-08'\n  }, {\n    trainId: 'K-115',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Basic',\n    mileage: 43200,\n    bayPosition: 'H1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-14',\n    brandingExpiry: '2024-11-18'\n  }, {\n    trainId: 'K-116',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 38700,\n    bayPosition: 'H2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-26',\n    brandingExpiry: '2025-02-05'\n  }, {\n    trainId: 'K-117',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 41500,\n    bayPosition: 'I1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-11',\n    brandingExpiry: '2024-12-22'\n  }, {\n    trainId: 'K-118',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Basic',\n    mileage: 46800,\n    bayPosition: 'I2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-07',\n    brandingExpiry: '2024-11-03'\n  }, {\n    trainId: 'K-119',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 34900,\n    bayPosition: 'J1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-29',\n    brandingExpiry: '2025-04-12'\n  }, {\n    trainId: 'K-120',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 42300,\n    bayPosition: 'J2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-16',\n    brandingExpiry: '2024-12-28'\n  }, {\n    trainId: 'K-121',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Basic',\n    mileage: 39800,\n    bayPosition: 'K1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-13',\n    brandingExpiry: '2024-11-26'\n  }, {\n    trainId: 'K-122',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Premium',\n    mileage: 37600,\n    bayPosition: 'K2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-24',\n    brandingExpiry: '2025-01-30'\n  }, {\n    trainId: 'K-123',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Standard',\n    mileage: 44100,\n    bayPosition: 'L1',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-09',\n    brandingExpiry: '2024-12-12'\n  }, {\n    trainId: 'K-124',\n    fitnessStatus: 'Valid',\n    jobCardStatus: 'Closed',\n    brandingCategory: 'Basic',\n    mileage: 36500,\n    bayPosition: 'L2',\n    cleaningStatus: 'Completed',\n    lastMaintenance: '2024-08-21',\n    brandingExpiry: '2024-11-14'\n  }];\n}\nfunction generateMockPlan(trains) {\n  if (!trains || trains.length === 0) {\n    trains = getMockTrains();\n  }\n\n  // Calculate priority scores and sort\n  const trainScores = trains.map(train => {\n    let score = 100;\n    if (train.fitnessStatus === 'Expired') score -= 50;\n    if (train.jobCardStatus === 'Open') score -= 30;\n    if (train.brandingCategory === 'Premium') score += 20;else if (train.brandingCategory === 'Standard') score += 10;\n    if (train.cleaningStatus === 'Pending') score -= 15;\n    score += Math.random() * 5; // Tie-breaker\n    return {\n      ...train,\n      priorityScore: Math.max(0, score)\n    };\n  }).sort((a, b) => b.priorityScore - a.priorityScore);\n  const service = [];\n  const standby = [];\n  const maintenance = [];\n  trainScores.forEach(train => {\n    let assignment;\n    if (train.fitnessStatus === 'Expired') {\n      assignment = 'Maintenance';\n    } else if (train.priorityScore >= 85 && train.fitnessStatus === 'Valid' && train.jobCardStatus === 'Closed' && service.length < 14) {\n      assignment = 'Service';\n    } else if (train.priorityScore >= 60 && train.fitnessStatus === 'Valid' && standby.length < 4) {\n      assignment = 'Standby';\n    } else {\n      assignment = 'Maintenance';\n    }\n    const reasoning = generateReasoning(train, assignment);\n    const trainAssignment = {\n      trainId: train.trainId,\n      assignment,\n      priorityScore: train.priorityScore,\n      reasoning\n    };\n    if (assignment === 'Service') service.push(trainAssignment);else if (assignment === 'Standby') standby.push(trainAssignment);else maintenance.push(trainAssignment);\n  });\n  const all = [...service, ...standby, ...maintenance];\n  return {\n    service,\n    standby,\n    maintenance,\n    all,\n    generatedAt: new Date().toISOString(),\n    totalTrains: trains.length\n  };\n}\nfunction generateReasoning(train, assignment) {\n  if (train.fitnessStatus === 'Expired') {\n    return 'Excluded due to expired fitness certificate';\n  }\n  if (train.jobCardStatus === 'Open') {\n    if (assignment === 'Maintenance') {\n      return 'Assigned to maintenance due to open job card requiring attention';\n    } else if (assignment === 'Standby') {\n      return 'Limited to standby role due to pending maintenance (open job card)';\n    }\n  }\n  if (assignment === 'Service') {\n    const reasons = [];\n    if (train.brandingCategory === 'Premium') {\n      reasons.push('premium branding priority');\n    }\n    if (train.cleaningStatus === 'Completed') {\n      reasons.push('cleaning completed');\n    }\n    if (train.fitnessStatus === 'Valid') {\n      reasons.push('valid fitness certificate');\n    }\n    return `Selected for service due to ${reasons.join(', ')}`;\n  }\n  if (assignment === 'Standby') {\n    return 'Assigned to standby for operational flexibility and backup capacity';\n  }\n  if (assignment === 'Maintenance') {\n    if (train.cleaningStatus === 'Pending') {\n      return 'Scheduled for maintenance including pending cleaning';\n    }\n    return 'Scheduled for routine maintenance';\n  }\n  return 'Assignment based on operational requirements';\n}\n\n// Train service API\nexport const trainService = {\n  async getTrains() {\n    try {\n      return await apiService.get('/trains');\n    } catch (error) {\n      console.warn('Backend not available, using mock data');\n      return getMockTrains();\n    }\n  },\n  async getTrain(trainId) {\n    try {\n      return await apiService.get(`/trains/${trainId}`);\n    } catch (error) {\n      console.warn('Backend not available');\n      const trains = getMockTrains();\n      return trains.find(t => t.trainId === trainId) || null;\n    }\n  },\n  async updateTrain(trainId, data) {\n    try {\n      return await apiService.put(`/trains/${trainId}`, data);\n    } catch (error) {\n      console.error('Failed to update train:', error);\n      throw error;\n    }\n  },\n  async generateInductionPlan(trains, constraints = {}) {\n    try {\n      const response = await apiService.post('/planning/generate', {\n        trains,\n        constraints\n      });\n      return response;\n    } catch (error) {\n      console.warn('Backend not available, generating mock plan');\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate loading\n      return generateMockPlan(trains);\n    }\n  },\n  async runSimulation(baseTrains, scenario) {\n    try {\n      return await apiService.post('/planning/simulate', {\n        baseTrains,\n        scenario\n      });\n    } catch (error) {\n      console.warn('Backend not available for simulation');\n      throw error;\n    }\n  },\n  exportPlanAsCSV(plan) {\n    if (!plan || !plan.all) return;\n    const csvContent = [['Train ID', 'Assignment', 'Priority Score', 'Reasoning'], ...plan.all.map(item => {\n      var _item$priorityScore;\n      return [item.trainId, item.assignment, ((_item$priorityScore = item.priorityScore) === null || _item$priorityScore === void 0 ? void 0 : _item$priorityScore.toFixed(1)) || '0.0', item.reasoning || 'No reasoning provided'];\n    })];\n    const csvString = csvContent.map(row => row.map(field => `\"${field}\"`).join(',')).join('\\\\n');\n    const blob = new Blob([csvString], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `induction-plan-${new Date().toISOString().split('T')[0]}.csv`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    window.URL.revokeObjectURL(url);\n  },\n  async exportPlanAsPDF(plan) {\n    if (!plan || !plan.all) return;\n    try {\n      var _plan$service, _plan$standby, _plan$maintenance;\n      const {\n        jsPDF\n      } = await import('jspdf');\n      await import('jspdf-autotable');\n      const doc = new jsPDF();\n\n      // Header\n      doc.setFontSize(20);\n      doc.text('Metro Induction Plan', 20, 20);\n      doc.setFontSize(12);\n      doc.text(`Generated: ${new Date().toLocaleString()}`, 20, 30);\n\n      // Summary\n      doc.text(`Total Trains: ${plan.all.length}`, 20, 45);\n      doc.text(`Service: ${((_plan$service = plan.service) === null || _plan$service === void 0 ? void 0 : _plan$service.length) || 0}`, 20, 55);\n      doc.text(`Standby: ${((_plan$standby = plan.standby) === null || _plan$standby === void 0 ? void 0 : _plan$standby.length) || 0}`, 90, 55);\n      doc.text(`Maintenance: ${((_plan$maintenance = plan.maintenance) === null || _plan$maintenance === void 0 ? void 0 : _plan$maintenance.length) || 0}`, 160, 55);\n\n      // Table\n      const tableData = plan.all.map(item => {\n        var _item$priorityScore2, _item$reasoning, _item$reasoning2;\n        return [item.trainId, item.assignment, ((_item$priorityScore2 = item.priorityScore) === null || _item$priorityScore2 === void 0 ? void 0 : _item$priorityScore2.toFixed(1)) || '0.0', ((_item$reasoning = item.reasoning) === null || _item$reasoning === void 0 ? void 0 : _item$reasoning.substring(0, 50)) + (((_item$reasoning2 = item.reasoning) === null || _item$reasoning2 === void 0 ? void 0 : _item$reasoning2.length) > 50 ? '...' : '') || ''];\n      });\n      doc.autoTable({\n        head: [['Train ID', 'Assignment', 'Priority', 'Reasoning']],\n        body: tableData,\n        startY: 70,\n        styles: {\n          fontSize: 8\n        },\n        columnStyles: {\n          3: {\n            cellWidth: 60\n          }\n        }\n      });\n      doc.save(`induction-plan-${new Date().toISOString().split('T')[0]}.pdf`);\n    } catch (error) {\n      console.error('Failed to generate PDF:', error);\n      alert('PDF generation failed. Please try CSV export instead.');\n    }\n  },\n  async exportComparisonReport(originalPlan, simulatedPlan, comparison) {\n    try {\n      const {\n        jsPDF\n      } = await import('jspdf');\n      await import('jspdf-autotable');\n      const doc = new jsPDF();\n\n      // Header\n      doc.setFontSize(20);\n      doc.text('Simulation Comparison Report', 20, 20);\n      doc.setFontSize(12);\n      doc.text(`Generated: ${new Date().toLocaleString()}`, 20, 30);\n\n      // Comparison Summary\n      doc.setFontSize(14);\n      doc.text('Impact Analysis', 20, 50);\n      doc.setFontSize(10);\n      let yPos = 60;\n      Object.entries(comparison).forEach(([key, data]) => {\n        if (typeof data === 'object' && data.original !== undefined) {\n          const change = data.difference > 0 ? `+${data.difference}` : data.difference.toString();\n          doc.text(`${key.charAt(0).toUpperCase() + key.slice(1)}: ${data.original} → ${data.simulated} (${change})`, 20, yPos);\n          yPos += 10;\n        }\n      });\n      doc.save(`simulation-comparison-${new Date().toISOString().split('T')[0]}.pdf`);\n    } catch (error) {\n      console.error('Failed to generate comparison PDF:', error);\n      alert('PDF generation failed.');\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","APIService","request","endpoint","options","url","config","headers","response","fetch","ok","Error","status","json","error","console","includes","method","getMockTrains","get","post","data","body","JSON","stringify","put","delete","apiService","trainId","fitnessStatus","jobCardStatus","brandingCategory","mileage","bayPosition","cleaningStatus","lastMaintenance","brandingExpiry","generateMockPlan","trains","length","trainScores","map","train","score","Math","random","priorityScore","max","sort","a","b","service","standby","maintenance","forEach","assignment","reasoning","generateReasoning","trainAssignment","push","all","generatedAt","Date","toISOString","totalTrains","reasons","join","trainService","getTrains","warn","getTrain","find","t","updateTrain","generateInductionPlan","constraints","Promise","resolve","setTimeout","runSimulation","baseTrains","scenario","exportPlanAsCSV","plan","csvContent","item","_item$priorityScore","toFixed","csvString","row","field","blob","Blob","type","window","URL","createObjectURL","link","document","createElement","href","download","split","appendChild","click","removeChild","revokeObjectURL","exportPlanAsPDF","_plan$service","_plan$standby","_plan$maintenance","jsPDF","doc","setFontSize","text","toLocaleString","tableData","_item$priorityScore2","_item$reasoning","_item$reasoning2","substring","autoTable","head","startY","styles","fontSize","columnStyles","cellWidth","save","alert","exportComparisonReport","originalPlan","simulatedPlan","comparison","yPos","Object","entries","key","original","undefined","change","difference","toString","charAt","toUpperCase","slice","simulated"],"sources":["D:/SIH 2/frontend/src/services/api.js"],"sourcesContent":["// API service for communicating with the backend\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass APIService {\r\n  async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      // For development, return mock data instead of throwing\r\n      if (endpoint.includes('/trains') && !options.method) {\r\n        return getMockTrains();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  get(endpoint) {\r\n    return this.request(endpoint);\r\n  }\r\n\r\n  post(endpoint, data) {\r\n    return this.request(endpoint, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  put(endpoint, data) {\r\n    return this.request(endpoint, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  delete(endpoint) {\r\n    return this.request(endpoint, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n}\r\n\r\nconst apiService = new APIService();\r\n\r\n// Mock data functions for development\r\nfunction getMockTrains() {\r\n  return [\r\n    {\r\n      trainId: 'K-101',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 45200,\r\n      bayPosition: 'A1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-15',\r\n      brandingExpiry: '2024-12-31'\r\n    },\r\n    {\r\n      trainId: 'K-102',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 38900,\r\n      bayPosition: 'A2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-10',\r\n      brandingExpiry: '2024-11-30'\r\n    },\r\n    {\r\n      trainId: 'K-103',\r\n      fitnessStatus: 'Expired',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Basic',\r\n      mileage: 52100,\r\n      bayPosition: 'B1',\r\n      cleaningStatus: 'Pending',\r\n      lastMaintenance: '2024-07-20',\r\n      brandingExpiry: '2024-10-15'\r\n    },\r\n    {\r\n      trainId: 'K-104',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 41800,\r\n      bayPosition: 'B2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-25',\r\n      brandingExpiry: '2025-01-15'\r\n    },\r\n    {\r\n      trainId: 'K-105',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Standard',\r\n      mileage: 36200,\r\n      bayPosition: 'C1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-05',\r\n      brandingExpiry: '2024-12-20'\r\n    },\r\n    {\r\n      trainId: 'K-106',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 47300,\r\n      bayPosition: 'C2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-18',\r\n      brandingExpiry: '2025-02-28'\r\n    },\r\n    {\r\n      trainId: 'K-107',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 39500,\r\n      bayPosition: 'D1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-12',\r\n      brandingExpiry: '2024-11-10'\r\n    },\r\n    {\r\n      trainId: 'K-108',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 33100,\r\n      bayPosition: 'D2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-22',\r\n      brandingExpiry: '2024-12-05'\r\n    },\r\n    {\r\n      trainId: 'K-109',\r\n      fitnessStatus: 'Expired',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Standard',\r\n      mileage: 48700,\r\n      bayPosition: 'E1',\r\n      cleaningStatus: 'Pending',\r\n      lastMaintenance: '2024-07-15',\r\n      brandingExpiry: '2024-10-01'\r\n    },\r\n    {\r\n      trainId: 'K-110',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 42600,\r\n      bayPosition: 'E2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-28',\r\n      brandingExpiry: '2025-01-20'\r\n    },\r\n    {\r\n      trainId: 'K-111',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 37400,\r\n      bayPosition: 'F1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-08',\r\n      brandingExpiry: '2024-12-15'\r\n    },\r\n    {\r\n      trainId: 'K-112',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Basic',\r\n      mileage: 44900,\r\n      bayPosition: 'F2',\r\n      cleaningStatus: 'Pending',\r\n      lastMaintenance: '2024-08-02',\r\n      brandingExpiry: '2024-11-25'\r\n    },\r\n    {\r\n      trainId: 'K-113',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 40100,\r\n      bayPosition: 'G1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-20',\r\n      brandingExpiry: '2025-03-10'\r\n    },\r\n    {\r\n      trainId: 'K-114',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 35800,\r\n      bayPosition: 'G2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-17',\r\n      brandingExpiry: '2024-12-08'\r\n    },\r\n    {\r\n      trainId: 'K-115',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 43200,\r\n      bayPosition: 'H1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-14',\r\n      brandingExpiry: '2024-11-18'\r\n    },\r\n    {\r\n      trainId: 'K-116',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 38700,\r\n      bayPosition: 'H2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-26',\r\n      brandingExpiry: '2025-02-05'\r\n    },\r\n    {\r\n      trainId: 'K-117',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 41500,\r\n      bayPosition: 'I1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-11',\r\n      brandingExpiry: '2024-12-22'\r\n    },\r\n    {\r\n      trainId: 'K-118',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 46800,\r\n      bayPosition: 'I2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-07',\r\n      brandingExpiry: '2024-11-03'\r\n    },\r\n    {\r\n      trainId: 'K-119',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 34900,\r\n      bayPosition: 'J1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-29',\r\n      brandingExpiry: '2025-04-12'\r\n    },\r\n    {\r\n      trainId: 'K-120',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 42300,\r\n      bayPosition: 'J2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-16',\r\n      brandingExpiry: '2024-12-28'\r\n    },\r\n    {\r\n      trainId: 'K-121',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 39800,\r\n      bayPosition: 'K1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-13',\r\n      brandingExpiry: '2024-11-26'\r\n    },\r\n    {\r\n      trainId: 'K-122',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 37600,\r\n      bayPosition: 'K2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-24',\r\n      brandingExpiry: '2025-01-30'\r\n    },\r\n    {\r\n      trainId: 'K-123',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 44100,\r\n      bayPosition: 'L1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-09',\r\n      brandingExpiry: '2024-12-12'\r\n    },\r\n    {\r\n      trainId: 'K-124',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 36500,\r\n      bayPosition: 'L2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-21',\r\n      brandingExpiry: '2024-11-14'\r\n    }\r\n  ];\r\n}\r\n\r\nfunction generateMockPlan(trains) {\r\n  if (!trains || trains.length === 0) {\r\n    trains = getMockTrains();\r\n  }\r\n\r\n  // Calculate priority scores and sort\r\n  const trainScores = trains.map(train => {\r\n    let score = 100;\r\n    if (train.fitnessStatus === 'Expired') score -= 50;\r\n    if (train.jobCardStatus === 'Open') score -= 30;\r\n    if (train.brandingCategory === 'Premium') score += 20;\r\n    else if (train.brandingCategory === 'Standard') score += 10;\r\n    if (train.cleaningStatus === 'Pending') score -= 15;\r\n    score += Math.random() * 5; // Tie-breaker\r\n    return { ...train, priorityScore: Math.max(0, score) };\r\n  }).sort((a, b) => b.priorityScore - a.priorityScore);\r\n\r\n  const service = [];\r\n  const standby = [];\r\n  const maintenance = [];\r\n\r\n  trainScores.forEach(train => {\r\n    let assignment;\r\n    if (train.fitnessStatus === 'Expired') {\r\n      assignment = 'Maintenance';\r\n    } else if (train.priorityScore >= 85 && train.fitnessStatus === 'Valid' && train.jobCardStatus === 'Closed' && service.length < 14) {\r\n      assignment = 'Service';\r\n    } else if (train.priorityScore >= 60 && train.fitnessStatus === 'Valid' && standby.length < 4) {\r\n      assignment = 'Standby';\r\n    } else {\r\n      assignment = 'Maintenance';\r\n    }\r\n\r\n    const reasoning = generateReasoning(train, assignment);\r\n    const trainAssignment = {\r\n      trainId: train.trainId,\r\n      assignment,\r\n      priorityScore: train.priorityScore,\r\n      reasoning\r\n    };\r\n\r\n    if (assignment === 'Service') service.push(trainAssignment);\r\n    else if (assignment === 'Standby') standby.push(trainAssignment);\r\n    else maintenance.push(trainAssignment);\r\n  });\r\n\r\n  const all = [...service, ...standby, ...maintenance];\r\n\r\n  return {\r\n    service,\r\n    standby,\r\n    maintenance,\r\n    all,\r\n    generatedAt: new Date().toISOString(),\r\n    totalTrains: trains.length\r\n  };\r\n}\r\n\r\nfunction generateReasoning(train, assignment) {\r\n  if (train.fitnessStatus === 'Expired') {\r\n    return 'Excluded due to expired fitness certificate';\r\n  }\r\n  \r\n  if (train.jobCardStatus === 'Open') {\r\n    if (assignment === 'Maintenance') {\r\n      return 'Assigned to maintenance due to open job card requiring attention';\r\n    } else if (assignment === 'Standby') {\r\n      return 'Limited to standby role due to pending maintenance (open job card)';\r\n    }\r\n  }\r\n  \r\n  if (assignment === 'Service') {\r\n    const reasons = [];\r\n    if (train.brandingCategory === 'Premium') {\r\n      reasons.push('premium branding priority');\r\n    }\r\n    if (train.cleaningStatus === 'Completed') {\r\n      reasons.push('cleaning completed');\r\n    }\r\n    if (train.fitnessStatus === 'Valid') {\r\n      reasons.push('valid fitness certificate');\r\n    }\r\n    \r\n    return `Selected for service due to ${reasons.join(', ')}`;\r\n  }\r\n  \r\n  if (assignment === 'Standby') {\r\n    return 'Assigned to standby for operational flexibility and backup capacity';\r\n  }\r\n  \r\n  if (assignment === 'Maintenance') {\r\n    if (train.cleaningStatus === 'Pending') {\r\n      return 'Scheduled for maintenance including pending cleaning';\r\n    }\r\n    return 'Scheduled for routine maintenance';\r\n  }\r\n  \r\n  return 'Assignment based on operational requirements';\r\n}\r\n\r\n// Train service API\r\nexport const trainService = {\r\n  async getTrains() {\r\n    try {\r\n      return await apiService.get('/trains');\r\n    } catch (error) {\r\n      console.warn('Backend not available, using mock data');\r\n      return getMockTrains();\r\n    }\r\n  },\r\n\r\n  async getTrain(trainId) {\r\n    try {\r\n      return await apiService.get(`/trains/${trainId}`);\r\n    } catch (error) {\r\n      console.warn('Backend not available');\r\n      const trains = getMockTrains();\r\n      return trains.find(t => t.trainId === trainId) || null;\r\n    }\r\n  },\r\n\r\n  async updateTrain(trainId, data) {\r\n    try {\r\n      return await apiService.put(`/trains/${trainId}`, data);\r\n    } catch (error) {\r\n      console.error('Failed to update train:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async generateInductionPlan(trains, constraints = {}) {\r\n    try {\r\n      const response = await apiService.post('/planning/generate', { trains, constraints });\r\n      return response;\r\n    } catch (error) {\r\n      console.warn('Backend not available, generating mock plan');\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate loading\r\n      return generateMockPlan(trains);\r\n    }\r\n  },\r\n\r\n  async runSimulation(baseTrains, scenario) {\r\n    try {\r\n      return await apiService.post('/planning/simulate', { baseTrains, scenario });\r\n    } catch (error) {\r\n      console.warn('Backend not available for simulation');\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  exportPlanAsCSV(plan) {\r\n    if (!plan || !plan.all) return;\r\n\r\n    const csvContent = [\r\n      ['Train ID', 'Assignment', 'Priority Score', 'Reasoning'],\r\n      ...plan.all.map(item => [\r\n        item.trainId,\r\n        item.assignment,\r\n        item.priorityScore?.toFixed(1) || '0.0',\r\n        item.reasoning || 'No reasoning provided'\r\n      ])\r\n    ];\r\n\r\n    const csvString = csvContent.map(row => \r\n      row.map(field => `\"${field}\"`).join(',')\r\n    ).join('\\\\n');\r\n\r\n    const blob = new Blob([csvString], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `induction-plan-${new Date().toISOString().split('T')[0]}.csv`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n  },\r\n\r\n  async exportPlanAsPDF(plan) {\r\n    if (!plan || !plan.all) return;\r\n\r\n    try {\r\n      const { jsPDF } = await import('jspdf');\r\n      await import('jspdf-autotable');\r\n\r\n      const doc = new jsPDF();\r\n\r\n      // Header\r\n      doc.setFontSize(20);\r\n      doc.text('Metro Induction Plan', 20, 20);\r\n      doc.setFontSize(12);\r\n      doc.text(`Generated: ${new Date().toLocaleString()}`, 20, 30);\r\n\r\n      // Summary\r\n      doc.text(`Total Trains: ${plan.all.length}`, 20, 45);\r\n      doc.text(`Service: ${plan.service?.length || 0}`, 20, 55);\r\n      doc.text(`Standby: ${plan.standby?.length || 0}`, 90, 55);\r\n      doc.text(`Maintenance: ${plan.maintenance?.length || 0}`, 160, 55);\r\n\r\n      // Table\r\n      const tableData = plan.all.map(item => [\r\n        item.trainId,\r\n        item.assignment,\r\n        item.priorityScore?.toFixed(1) || '0.0',\r\n        item.reasoning?.substring(0, 50) + (item.reasoning?.length > 50 ? '...' : '') || ''\r\n      ]);\r\n\r\n      doc.autoTable({\r\n        head: [['Train ID', 'Assignment', 'Priority', 'Reasoning']],\r\n        body: tableData,\r\n        startY: 70,\r\n        styles: { fontSize: 8 },\r\n        columnStyles: {\r\n          3: { cellWidth: 60 }\r\n        }\r\n      });\r\n\r\n      doc.save(`induction-plan-${new Date().toISOString().split('T')[0]}.pdf`);\r\n    } catch (error) {\r\n      console.error('Failed to generate PDF:', error);\r\n      alert('PDF generation failed. Please try CSV export instead.');\r\n    }\r\n  },\r\n\r\n  async exportComparisonReport(originalPlan, simulatedPlan, comparison) {\r\n    try {\r\n      const { jsPDF } = await import('jspdf');\r\n      await import('jspdf-autotable');\r\n\r\n      const doc = new jsPDF();\r\n\r\n      // Header\r\n      doc.setFontSize(20);\r\n      doc.text('Simulation Comparison Report', 20, 20);\r\n      doc.setFontSize(12);\r\n      doc.text(`Generated: ${new Date().toLocaleString()}`, 20, 30);\r\n\r\n      // Comparison Summary\r\n      doc.setFontSize(14);\r\n      doc.text('Impact Analysis', 20, 50);\r\n      doc.setFontSize(10);\r\n      \r\n      let yPos = 60;\r\n      Object.entries(comparison).forEach(([key, data]) => {\r\n        if (typeof data === 'object' && data.original !== undefined) {\r\n          const change = data.difference > 0 ? `+${data.difference}` : data.difference.toString();\r\n          doc.text(`${key.charAt(0).toUpperCase() + key.slice(1)}: ${data.original} → ${data.simulated} (${change})`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n      });\r\n\r\n      doc.save(`simulation-comparison-${new Date().toISOString().split('T')[0]}.pdf`);\r\n    } catch (error) {\r\n      console.error('Failed to generate comparison PDF:', error);\r\n      alert('PDF generation failed.');\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"D:/SIH 2/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// API service for communicating with the backend\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';class APIService{async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=\"\".concat(API_BASE_URL).concat(endpoint);const config=_objectSpread({headers:{'Content-Type':'application/json'}},options);try{const response=await fetch(url,config);if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error('API request failed:',error);// For development, return mock data instead of throwing\nif(endpoint.includes('/trains')&&!options.method){return getMockTrains();}throw error;}}get(endpoint){return this.request(endpoint);}post(endpoint,data){return this.request(endpoint,{method:'POST',body:JSON.stringify(data)});}put(endpoint,data){return this.request(endpoint,{method:'PUT',body:JSON.stringify(data)});}delete(endpoint){return this.request(endpoint,{method:'DELETE'});}}const apiService=new APIService();// Mock data functions for development\nfunction getMockTrains(){return[{trainId:'K-101',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:45200,bayPosition:'A1',cleaningStatus:'Completed',lastMaintenance:'2024-08-15',brandingExpiry:'2024-12-31'},{trainId:'K-102',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:38900,bayPosition:'A2',cleaningStatus:'Completed',lastMaintenance:'2024-08-10',brandingExpiry:'2024-11-30'},{trainId:'K-103',fitnessStatus:'Expired',jobCardStatus:'Open',brandingCategory:'Basic',mileage:52100,bayPosition:'B1',cleaningStatus:'Pending',lastMaintenance:'2024-07-20',brandingExpiry:'2024-10-15'},{trainId:'K-104',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:41800,bayPosition:'B2',cleaningStatus:'Completed',lastMaintenance:'2024-08-25',brandingExpiry:'2025-01-15'},{trainId:'K-105',fitnessStatus:'Valid',jobCardStatus:'Open',brandingCategory:'Standard',mileage:36200,bayPosition:'C1',cleaningStatus:'Completed',lastMaintenance:'2024-08-05',brandingExpiry:'2024-12-20'},{trainId:'K-106',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:47300,bayPosition:'C2',cleaningStatus:'Completed',lastMaintenance:'2024-08-18',brandingExpiry:'2025-02-28'},{trainId:'K-107',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:39500,bayPosition:'D1',cleaningStatus:'Completed',lastMaintenance:'2024-08-12',brandingExpiry:'2024-11-10'},{trainId:'K-108',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Basic',mileage:33100,bayPosition:'D2',cleaningStatus:'Completed',lastMaintenance:'2024-08-22',brandingExpiry:'2024-12-05'},{trainId:'K-109',fitnessStatus:'Expired',jobCardStatus:'Open',brandingCategory:'Standard',mileage:48700,bayPosition:'E1',cleaningStatus:'Pending',lastMaintenance:'2024-07-15',brandingExpiry:'2024-10-01'},{trainId:'K-110',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:42600,bayPosition:'E2',cleaningStatus:'Completed',lastMaintenance:'2024-08-28',brandingExpiry:'2025-01-20'},{trainId:'K-111',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:37400,bayPosition:'F1',cleaningStatus:'Completed',lastMaintenance:'2024-08-08',brandingExpiry:'2024-12-15'},{trainId:'K-112',fitnessStatus:'Valid',jobCardStatus:'Open',brandingCategory:'Basic',mileage:44900,bayPosition:'F2',cleaningStatus:'Pending',lastMaintenance:'2024-08-02',brandingExpiry:'2024-11-25'},{trainId:'K-113',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:40100,bayPosition:'G1',cleaningStatus:'Completed',lastMaintenance:'2024-08-20',brandingExpiry:'2025-03-10'},{trainId:'K-114',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:35800,bayPosition:'G2',cleaningStatus:'Completed',lastMaintenance:'2024-08-17',brandingExpiry:'2024-12-08'},{trainId:'K-115',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Basic',mileage:43200,bayPosition:'H1',cleaningStatus:'Completed',lastMaintenance:'2024-08-14',brandingExpiry:'2024-11-18'},{trainId:'K-116',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:38700,bayPosition:'H2',cleaningStatus:'Completed',lastMaintenance:'2024-08-26',brandingExpiry:'2025-02-05'},{trainId:'K-117',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:41500,bayPosition:'I1',cleaningStatus:'Completed',lastMaintenance:'2024-08-11',brandingExpiry:'2024-12-22'},{trainId:'K-118',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Basic',mileage:46800,bayPosition:'I2',cleaningStatus:'Completed',lastMaintenance:'2024-08-07',brandingExpiry:'2024-11-03'},{trainId:'K-119',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:34900,bayPosition:'J1',cleaningStatus:'Completed',lastMaintenance:'2024-08-29',brandingExpiry:'2025-04-12'},{trainId:'K-120',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:42300,bayPosition:'J2',cleaningStatus:'Completed',lastMaintenance:'2024-08-16',brandingExpiry:'2024-12-28'},{trainId:'K-121',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Basic',mileage:39800,bayPosition:'K1',cleaningStatus:'Completed',lastMaintenance:'2024-08-13',brandingExpiry:'2024-11-26'},{trainId:'K-122',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Premium',mileage:37600,bayPosition:'K2',cleaningStatus:'Completed',lastMaintenance:'2024-08-24',brandingExpiry:'2025-01-30'},{trainId:'K-123',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Standard',mileage:44100,bayPosition:'L1',cleaningStatus:'Completed',lastMaintenance:'2024-08-09',brandingExpiry:'2024-12-12'},{trainId:'K-124',fitnessStatus:'Valid',jobCardStatus:'Closed',brandingCategory:'Basic',mileage:36500,bayPosition:'L2',cleaningStatus:'Completed',lastMaintenance:'2024-08-21',brandingExpiry:'2024-11-14'}];}function generateMockPlan(trains){if(!trains||trains.length===0){trains=getMockTrains();}// Calculate priority scores and sort\nconst trainScores=trains.map(train=>{let score=100;if(train.fitnessStatus==='Expired')score-=50;if(train.jobCardStatus==='Open')score-=30;if(train.brandingCategory==='Premium')score+=20;else if(train.brandingCategory==='Standard')score+=10;if(train.cleaningStatus==='Pending')score-=15;score+=Math.random()*5;// Tie-breaker\nreturn _objectSpread(_objectSpread({},train),{},{priorityScore:Math.max(0,score)});}).sort((a,b)=>b.priorityScore-a.priorityScore);const service=[];const standby=[];const maintenance=[];trainScores.forEach(train=>{let assignment;if(train.fitnessStatus==='Expired'){assignment='Maintenance';}else if(train.priorityScore>=85&&train.fitnessStatus==='Valid'&&train.jobCardStatus==='Closed'&&service.length<14){assignment='Service';}else if(train.priorityScore>=60&&train.fitnessStatus==='Valid'&&standby.length<4){assignment='Standby';}else{assignment='Maintenance';}const reasoning=generateReasoning(train,assignment);const trainAssignment={trainId:train.trainId,assignment,priorityScore:train.priorityScore,reasoning};if(assignment==='Service')service.push(trainAssignment);else if(assignment==='Standby')standby.push(trainAssignment);else maintenance.push(trainAssignment);});const all=[...service,...standby,...maintenance];return{service,standby,maintenance,all,generatedAt:new Date().toISOString(),totalTrains:trains.length};}function generateReasoning(train,assignment){if(train.fitnessStatus==='Expired'){return'Excluded due to expired fitness certificate';}if(train.jobCardStatus==='Open'){if(assignment==='Maintenance'){return'Assigned to maintenance due to open job card requiring attention';}else if(assignment==='Standby'){return'Limited to standby role due to pending maintenance (open job card)';}}if(assignment==='Service'){const reasons=[];if(train.brandingCategory==='Premium'){reasons.push('premium branding priority');}if(train.cleaningStatus==='Completed'){reasons.push('cleaning completed');}if(train.fitnessStatus==='Valid'){reasons.push('valid fitness certificate');}return\"Selected for service due to \".concat(reasons.join(', '));}if(assignment==='Standby'){return'Assigned to standby for operational flexibility and backup capacity';}if(assignment==='Maintenance'){if(train.cleaningStatus==='Pending'){return'Scheduled for maintenance including pending cleaning';}return'Scheduled for routine maintenance';}return'Assignment based on operational requirements';}// Train service API\nexport const trainService={async getTrains(){try{return await apiService.get('/trains');}catch(error){console.warn('Backend not available, using mock data');return getMockTrains();}},async getTrain(trainId){try{return await apiService.get(\"/trains/\".concat(trainId));}catch(error){console.warn('Backend not available');const trains=getMockTrains();return trains.find(t=>t.trainId===trainId)||null;}},async updateTrain(trainId,data){try{return await apiService.put(\"/trains/\".concat(trainId),data);}catch(error){console.error('Failed to update train:',error);throw error;}},async generateInductionPlan(trains){let constraints=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await apiService.post('/planning/generate',{trains,constraints});return response;}catch(error){console.warn('Backend not available, generating mock plan');await new Promise(resolve=>setTimeout(resolve,1000));// Simulate loading\nreturn generateMockPlan(trains);}},async runSimulation(baseTrains,scenario){try{return await apiService.post('/planning/simulate',{baseTrains,scenario});}catch(error){console.warn('Backend not available for simulation');throw error;}},exportPlanAsCSV(plan){if(!plan||!plan.all)return;const csvContent=[['Train ID','Assignment','Priority Score','Reasoning'],...plan.all.map(item=>{var _item$priorityScore;return[item.trainId,item.assignment,((_item$priorityScore=item.priorityScore)===null||_item$priorityScore===void 0?void 0:_item$priorityScore.toFixed(1))||'0.0',item.reasoning||'No reasoning provided'];})];const csvString=csvContent.map(row=>row.map(field=>\"\\\"\".concat(field,\"\\\"\")).join(',')).join('\\\\n');const blob=new Blob([csvString],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=\"induction-plan-\".concat(new Date().toISOString().split('T')[0],\".csv\");document.body.appendChild(link);link.click();document.body.removeChild(link);window.URL.revokeObjectURL(url);},async exportPlanAsPDF(plan){if(!plan||!plan.all)return;try{var _plan$service,_plan$standby,_plan$maintenance;const{jsPDF}=await import('jspdf');await import('jspdf-autotable');const doc=new jsPDF();// Header\ndoc.setFontSize(20);doc.text('Metro Induction Plan',20,20);doc.setFontSize(12);doc.text(\"Generated: \".concat(new Date().toLocaleString()),20,30);// Summary\ndoc.text(\"Total Trains: \".concat(plan.all.length),20,45);doc.text(\"Service: \".concat(((_plan$service=plan.service)===null||_plan$service===void 0?void 0:_plan$service.length)||0),20,55);doc.text(\"Standby: \".concat(((_plan$standby=plan.standby)===null||_plan$standby===void 0?void 0:_plan$standby.length)||0),90,55);doc.text(\"Maintenance: \".concat(((_plan$maintenance=plan.maintenance)===null||_plan$maintenance===void 0?void 0:_plan$maintenance.length)||0),160,55);// Table\nconst tableData=plan.all.map(item=>{var _item$priorityScore2,_item$reasoning,_item$reasoning2;return[item.trainId,item.assignment,((_item$priorityScore2=item.priorityScore)===null||_item$priorityScore2===void 0?void 0:_item$priorityScore2.toFixed(1))||'0.0',((_item$reasoning=item.reasoning)===null||_item$reasoning===void 0?void 0:_item$reasoning.substring(0,50))+(((_item$reasoning2=item.reasoning)===null||_item$reasoning2===void 0?void 0:_item$reasoning2.length)>50?'...':'')||''];});doc.autoTable({head:[['Train ID','Assignment','Priority','Reasoning']],body:tableData,startY:70,styles:{fontSize:8},columnStyles:{3:{cellWidth:60}}});doc.save(\"induction-plan-\".concat(new Date().toISOString().split('T')[0],\".pdf\"));}catch(error){console.error('Failed to generate PDF:',error);alert('PDF generation failed. Please try CSV export instead.');}},async exportComparisonReport(originalPlan,simulatedPlan,comparison){try{const{jsPDF}=await import('jspdf');await import('jspdf-autotable');const doc=new jsPDF();// Header\ndoc.setFontSize(20);doc.text('Simulation Comparison Report',20,20);doc.setFontSize(12);doc.text(\"Generated: \".concat(new Date().toLocaleString()),20,30);// Comparison Summary\ndoc.setFontSize(14);doc.text('Impact Analysis',20,50);doc.setFontSize(10);let yPos=60;Object.entries(comparison).forEach(_ref=>{let[key,data]=_ref;if(typeof data==='object'&&data.original!==undefined){const change=data.difference>0?\"+\".concat(data.difference):data.difference.toString();doc.text(\"\".concat(key.charAt(0).toUpperCase()+key.slice(1),\": \").concat(data.original,\" \\u2192 \").concat(data.simulated,\" (\").concat(change,\")\"),20,yPos);yPos+=10;}});doc.save(\"simulation-comparison-\".concat(new Date().toISOString().split('T')[0],\".pdf\"));}catch(error){console.error('Failed to generate comparison PDF:',error);alert('PDF generation failed.');}}};export default apiService;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","APIService","request","endpoint","options","arguments","length","undefined","url","concat","config","_objectSpread","headers","response","fetch","ok","Error","status","json","error","console","includes","method","getMockTrains","get","post","data","body","JSON","stringify","put","delete","apiService","trainId","fitnessStatus","jobCardStatus","brandingCategory","mileage","bayPosition","cleaningStatus","lastMaintenance","brandingExpiry","generateMockPlan","trains","trainScores","map","train","score","Math","random","priorityScore","max","sort","a","b","service","standby","maintenance","forEach","assignment","reasoning","generateReasoning","trainAssignment","push","all","generatedAt","Date","toISOString","totalTrains","reasons","join","trainService","getTrains","warn","getTrain","find","t","updateTrain","generateInductionPlan","constraints","Promise","resolve","setTimeout","runSimulation","baseTrains","scenario","exportPlanAsCSV","plan","csvContent","item","_item$priorityScore","toFixed","csvString","row","field","blob","Blob","type","window","URL","createObjectURL","link","document","createElement","href","download","split","appendChild","click","removeChild","revokeObjectURL","exportPlanAsPDF","_plan$service","_plan$standby","_plan$maintenance","jsPDF","doc","setFontSize","text","toLocaleString","tableData","_item$priorityScore2","_item$reasoning","_item$reasoning2","substring","autoTable","head","startY","styles","fontSize","columnStyles","cellWidth","save","alert","exportComparisonReport","originalPlan","simulatedPlan","comparison","yPos","Object","entries","_ref","key","original","change","difference","toString","charAt","toUpperCase","slice","simulated"],"sources":["D:/SIH 2/frontend/src/services/api.js"],"sourcesContent":["// API service for communicating with the backend\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nclass APIService {\r\n  async request(endpoint, options = {}) {\r\n    const url = `${API_BASE_URL}${endpoint}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      ...options,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('API request failed:', error);\r\n      // For development, return mock data instead of throwing\r\n      if (endpoint.includes('/trains') && !options.method) {\r\n        return getMockTrains();\r\n      }\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  get(endpoint) {\r\n    return this.request(endpoint);\r\n  }\r\n\r\n  post(endpoint, data) {\r\n    return this.request(endpoint, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  put(endpoint, data) {\r\n    return this.request(endpoint, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(data),\r\n    });\r\n  }\r\n\r\n  delete(endpoint) {\r\n    return this.request(endpoint, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n}\r\n\r\nconst apiService = new APIService();\r\n\r\n// Mock data functions for development\r\nfunction getMockTrains() {\r\n  return [\r\n    {\r\n      trainId: 'K-101',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 45200,\r\n      bayPosition: 'A1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-15',\r\n      brandingExpiry: '2024-12-31'\r\n    },\r\n    {\r\n      trainId: 'K-102',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 38900,\r\n      bayPosition: 'A2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-10',\r\n      brandingExpiry: '2024-11-30'\r\n    },\r\n    {\r\n      trainId: 'K-103',\r\n      fitnessStatus: 'Expired',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Basic',\r\n      mileage: 52100,\r\n      bayPosition: 'B1',\r\n      cleaningStatus: 'Pending',\r\n      lastMaintenance: '2024-07-20',\r\n      brandingExpiry: '2024-10-15'\r\n    },\r\n    {\r\n      trainId: 'K-104',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 41800,\r\n      bayPosition: 'B2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-25',\r\n      brandingExpiry: '2025-01-15'\r\n    },\r\n    {\r\n      trainId: 'K-105',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Standard',\r\n      mileage: 36200,\r\n      bayPosition: 'C1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-05',\r\n      brandingExpiry: '2024-12-20'\r\n    },\r\n    {\r\n      trainId: 'K-106',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 47300,\r\n      bayPosition: 'C2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-18',\r\n      brandingExpiry: '2025-02-28'\r\n    },\r\n    {\r\n      trainId: 'K-107',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 39500,\r\n      bayPosition: 'D1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-12',\r\n      brandingExpiry: '2024-11-10'\r\n    },\r\n    {\r\n      trainId: 'K-108',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 33100,\r\n      bayPosition: 'D2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-22',\r\n      brandingExpiry: '2024-12-05'\r\n    },\r\n    {\r\n      trainId: 'K-109',\r\n      fitnessStatus: 'Expired',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Standard',\r\n      mileage: 48700,\r\n      bayPosition: 'E1',\r\n      cleaningStatus: 'Pending',\r\n      lastMaintenance: '2024-07-15',\r\n      brandingExpiry: '2024-10-01'\r\n    },\r\n    {\r\n      trainId: 'K-110',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 42600,\r\n      bayPosition: 'E2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-28',\r\n      brandingExpiry: '2025-01-20'\r\n    },\r\n    {\r\n      trainId: 'K-111',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 37400,\r\n      bayPosition: 'F1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-08',\r\n      brandingExpiry: '2024-12-15'\r\n    },\r\n    {\r\n      trainId: 'K-112',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Open',\r\n      brandingCategory: 'Basic',\r\n      mileage: 44900,\r\n      bayPosition: 'F2',\r\n      cleaningStatus: 'Pending',\r\n      lastMaintenance: '2024-08-02',\r\n      brandingExpiry: '2024-11-25'\r\n    },\r\n    {\r\n      trainId: 'K-113',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 40100,\r\n      bayPosition: 'G1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-20',\r\n      brandingExpiry: '2025-03-10'\r\n    },\r\n    {\r\n      trainId: 'K-114',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 35800,\r\n      bayPosition: 'G2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-17',\r\n      brandingExpiry: '2024-12-08'\r\n    },\r\n    {\r\n      trainId: 'K-115',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 43200,\r\n      bayPosition: 'H1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-14',\r\n      brandingExpiry: '2024-11-18'\r\n    },\r\n    {\r\n      trainId: 'K-116',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 38700,\r\n      bayPosition: 'H2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-26',\r\n      brandingExpiry: '2025-02-05'\r\n    },\r\n    {\r\n      trainId: 'K-117',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 41500,\r\n      bayPosition: 'I1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-11',\r\n      brandingExpiry: '2024-12-22'\r\n    },\r\n    {\r\n      trainId: 'K-118',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 46800,\r\n      bayPosition: 'I2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-07',\r\n      brandingExpiry: '2024-11-03'\r\n    },\r\n    {\r\n      trainId: 'K-119',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 34900,\r\n      bayPosition: 'J1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-29',\r\n      brandingExpiry: '2025-04-12'\r\n    },\r\n    {\r\n      trainId: 'K-120',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 42300,\r\n      bayPosition: 'J2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-16',\r\n      brandingExpiry: '2024-12-28'\r\n    },\r\n    {\r\n      trainId: 'K-121',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 39800,\r\n      bayPosition: 'K1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-13',\r\n      brandingExpiry: '2024-11-26'\r\n    },\r\n    {\r\n      trainId: 'K-122',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Premium',\r\n      mileage: 37600,\r\n      bayPosition: 'K2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-24',\r\n      brandingExpiry: '2025-01-30'\r\n    },\r\n    {\r\n      trainId: 'K-123',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Standard',\r\n      mileage: 44100,\r\n      bayPosition: 'L1',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-09',\r\n      brandingExpiry: '2024-12-12'\r\n    },\r\n    {\r\n      trainId: 'K-124',\r\n      fitnessStatus: 'Valid',\r\n      jobCardStatus: 'Closed',\r\n      brandingCategory: 'Basic',\r\n      mileage: 36500,\r\n      bayPosition: 'L2',\r\n      cleaningStatus: 'Completed',\r\n      lastMaintenance: '2024-08-21',\r\n      brandingExpiry: '2024-11-14'\r\n    }\r\n  ];\r\n}\r\n\r\nfunction generateMockPlan(trains) {\r\n  if (!trains || trains.length === 0) {\r\n    trains = getMockTrains();\r\n  }\r\n\r\n  // Calculate priority scores and sort\r\n  const trainScores = trains.map(train => {\r\n    let score = 100;\r\n    if (train.fitnessStatus === 'Expired') score -= 50;\r\n    if (train.jobCardStatus === 'Open') score -= 30;\r\n    if (train.brandingCategory === 'Premium') score += 20;\r\n    else if (train.brandingCategory === 'Standard') score += 10;\r\n    if (train.cleaningStatus === 'Pending') score -= 15;\r\n    score += Math.random() * 5; // Tie-breaker\r\n    return { ...train, priorityScore: Math.max(0, score) };\r\n  }).sort((a, b) => b.priorityScore - a.priorityScore);\r\n\r\n  const service = [];\r\n  const standby = [];\r\n  const maintenance = [];\r\n\r\n  trainScores.forEach(train => {\r\n    let assignment;\r\n    if (train.fitnessStatus === 'Expired') {\r\n      assignment = 'Maintenance';\r\n    } else if (train.priorityScore >= 85 && train.fitnessStatus === 'Valid' && train.jobCardStatus === 'Closed' && service.length < 14) {\r\n      assignment = 'Service';\r\n    } else if (train.priorityScore >= 60 && train.fitnessStatus === 'Valid' && standby.length < 4) {\r\n      assignment = 'Standby';\r\n    } else {\r\n      assignment = 'Maintenance';\r\n    }\r\n\r\n    const reasoning = generateReasoning(train, assignment);\r\n    const trainAssignment = {\r\n      trainId: train.trainId,\r\n      assignment,\r\n      priorityScore: train.priorityScore,\r\n      reasoning\r\n    };\r\n\r\n    if (assignment === 'Service') service.push(trainAssignment);\r\n    else if (assignment === 'Standby') standby.push(trainAssignment);\r\n    else maintenance.push(trainAssignment);\r\n  });\r\n\r\n  const all = [...service, ...standby, ...maintenance];\r\n\r\n  return {\r\n    service,\r\n    standby,\r\n    maintenance,\r\n    all,\r\n    generatedAt: new Date().toISOString(),\r\n    totalTrains: trains.length\r\n  };\r\n}\r\n\r\nfunction generateReasoning(train, assignment) {\r\n  if (train.fitnessStatus === 'Expired') {\r\n    return 'Excluded due to expired fitness certificate';\r\n  }\r\n  \r\n  if (train.jobCardStatus === 'Open') {\r\n    if (assignment === 'Maintenance') {\r\n      return 'Assigned to maintenance due to open job card requiring attention';\r\n    } else if (assignment === 'Standby') {\r\n      return 'Limited to standby role due to pending maintenance (open job card)';\r\n    }\r\n  }\r\n  \r\n  if (assignment === 'Service') {\r\n    const reasons = [];\r\n    if (train.brandingCategory === 'Premium') {\r\n      reasons.push('premium branding priority');\r\n    }\r\n    if (train.cleaningStatus === 'Completed') {\r\n      reasons.push('cleaning completed');\r\n    }\r\n    if (train.fitnessStatus === 'Valid') {\r\n      reasons.push('valid fitness certificate');\r\n    }\r\n    \r\n    return `Selected for service due to ${reasons.join(', ')}`;\r\n  }\r\n  \r\n  if (assignment === 'Standby') {\r\n    return 'Assigned to standby for operational flexibility and backup capacity';\r\n  }\r\n  \r\n  if (assignment === 'Maintenance') {\r\n    if (train.cleaningStatus === 'Pending') {\r\n      return 'Scheduled for maintenance including pending cleaning';\r\n    }\r\n    return 'Scheduled for routine maintenance';\r\n  }\r\n  \r\n  return 'Assignment based on operational requirements';\r\n}\r\n\r\n// Train service API\r\nexport const trainService = {\r\n  async getTrains() {\r\n    try {\r\n      return await apiService.get('/trains');\r\n    } catch (error) {\r\n      console.warn('Backend not available, using mock data');\r\n      return getMockTrains();\r\n    }\r\n  },\r\n\r\n  async getTrain(trainId) {\r\n    try {\r\n      return await apiService.get(`/trains/${trainId}`);\r\n    } catch (error) {\r\n      console.warn('Backend not available');\r\n      const trains = getMockTrains();\r\n      return trains.find(t => t.trainId === trainId) || null;\r\n    }\r\n  },\r\n\r\n  async updateTrain(trainId, data) {\r\n    try {\r\n      return await apiService.put(`/trains/${trainId}`, data);\r\n    } catch (error) {\r\n      console.error('Failed to update train:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  async generateInductionPlan(trains, constraints = {}) {\r\n    try {\r\n      const response = await apiService.post('/planning/generate', { trains, constraints });\r\n      return response;\r\n    } catch (error) {\r\n      console.warn('Backend not available, generating mock plan');\r\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate loading\r\n      return generateMockPlan(trains);\r\n    }\r\n  },\r\n\r\n  async runSimulation(baseTrains, scenario) {\r\n    try {\r\n      return await apiService.post('/planning/simulate', { baseTrains, scenario });\r\n    } catch (error) {\r\n      console.warn('Backend not available for simulation');\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  exportPlanAsCSV(plan) {\r\n    if (!plan || !plan.all) return;\r\n\r\n    const csvContent = [\r\n      ['Train ID', 'Assignment', 'Priority Score', 'Reasoning'],\r\n      ...plan.all.map(item => [\r\n        item.trainId,\r\n        item.assignment,\r\n        item.priorityScore?.toFixed(1) || '0.0',\r\n        item.reasoning || 'No reasoning provided'\r\n      ])\r\n    ];\r\n\r\n    const csvString = csvContent.map(row => \r\n      row.map(field => `\"${field}\"`).join(',')\r\n    ).join('\\\\n');\r\n\r\n    const blob = new Blob([csvString], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = url;\r\n    link.download = `induction-plan-${new Date().toISOString().split('T')[0]}.csv`;\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    window.URL.revokeObjectURL(url);\r\n  },\r\n\r\n  async exportPlanAsPDF(plan) {\r\n    if (!plan || !plan.all) return;\r\n\r\n    try {\r\n      const { jsPDF } = await import('jspdf');\r\n      await import('jspdf-autotable');\r\n\r\n      const doc = new jsPDF();\r\n\r\n      // Header\r\n      doc.setFontSize(20);\r\n      doc.text('Metro Induction Plan', 20, 20);\r\n      doc.setFontSize(12);\r\n      doc.text(`Generated: ${new Date().toLocaleString()}`, 20, 30);\r\n\r\n      // Summary\r\n      doc.text(`Total Trains: ${plan.all.length}`, 20, 45);\r\n      doc.text(`Service: ${plan.service?.length || 0}`, 20, 55);\r\n      doc.text(`Standby: ${plan.standby?.length || 0}`, 90, 55);\r\n      doc.text(`Maintenance: ${plan.maintenance?.length || 0}`, 160, 55);\r\n\r\n      // Table\r\n      const tableData = plan.all.map(item => [\r\n        item.trainId,\r\n        item.assignment,\r\n        item.priorityScore?.toFixed(1) || '0.0',\r\n        item.reasoning?.substring(0, 50) + (item.reasoning?.length > 50 ? '...' : '') || ''\r\n      ]);\r\n\r\n      doc.autoTable({\r\n        head: [['Train ID', 'Assignment', 'Priority', 'Reasoning']],\r\n        body: tableData,\r\n        startY: 70,\r\n        styles: { fontSize: 8 },\r\n        columnStyles: {\r\n          3: { cellWidth: 60 }\r\n        }\r\n      });\r\n\r\n      doc.save(`induction-plan-${new Date().toISOString().split('T')[0]}.pdf`);\r\n    } catch (error) {\r\n      console.error('Failed to generate PDF:', error);\r\n      alert('PDF generation failed. Please try CSV export instead.');\r\n    }\r\n  },\r\n\r\n  async exportComparisonReport(originalPlan, simulatedPlan, comparison) {\r\n    try {\r\n      const { jsPDF } = await import('jspdf');\r\n      await import('jspdf-autotable');\r\n\r\n      const doc = new jsPDF();\r\n\r\n      // Header\r\n      doc.setFontSize(20);\r\n      doc.text('Simulation Comparison Report', 20, 20);\r\n      doc.setFontSize(12);\r\n      doc.text(`Generated: ${new Date().toLocaleString()}`, 20, 30);\r\n\r\n      // Comparison Summary\r\n      doc.setFontSize(14);\r\n      doc.text('Impact Analysis', 20, 50);\r\n      doc.setFontSize(10);\r\n      \r\n      let yPos = 60;\r\n      Object.entries(comparison).forEach(([key, data]) => {\r\n        if (typeof data === 'object' && data.original !== undefined) {\r\n          const change = data.difference > 0 ? `+${data.difference}` : data.difference.toString();\r\n          doc.text(`${key.charAt(0).toUpperCase() + key.slice(1)}: ${data.original} → ${data.simulated} (${change})`, 20, yPos);\r\n          yPos += 10;\r\n        }\r\n      });\r\n\r\n      doc.save(`simulation-comparison-${new Date().toISOString().split('T')[0]}.pdf`);\r\n    } catch (error) {\r\n      console.error('Failed to generate comparison PDF:', error);\r\n      alert('PDF generation failed.');\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}